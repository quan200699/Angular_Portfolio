{"version":3,"sources":["./src/app/helper/admin-auth-guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASyB;AACgB;AAE+B;AAKxE,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,YAAoB,MAAc,EACd,WAAkC;QADlC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAuB;QACpD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CACpC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,IAA4B,EAAE,KAA0B;QAClE,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;gBAC3B,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;oBAC9B,YAAY,GAAG,IAAI,CAAC;oBACpB,MAAM;iBACP;aACF;YACD,IAAI,YAAY,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAE,CAAC;gBACjH,OAAO,KAAK,CAAC;aACd;SACF;aAAM;YACL,8DAA8D;YAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACzF,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IACD,gBAAgB,CAAC,IAA4B,EAAE,KAA0B;QACvE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;gBAC3B,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;oBAC9B,YAAY,GAAG,IAAI,CAAC;oBACpB,MAAM;iBACP;aACF;YACD,OAAO,YAAY,CAAC;SACrB;aAAM;YACL,8DAA8D;YAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACzF,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IACD,OAAO,CAAC,KAAY,EAAE,QAAsB;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;CACF;;YApD6B,sDAAM;YACD,qFAAqB;;AAH3C,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAsD1B;AAtD0B","file":"common-es2015.js","sourcesContent":["import {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlSegment\r\n} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {UserToken} from '../model/user-token';\r\nimport {AuthenticationService} from '../service/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminAuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  currentUser: UserToken;\r\n  constructor(private router: Router,\r\n              private authService: AuthenticationService) {\r\n    this.authService.currentUser.subscribe(\r\n      next => {\r\n        this.currentUser = next;\r\n      }\r\n    );\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    let hasRoleAdmin = false;\r\n    if (this.currentUser) {\r\n      const roleList = this.currentUser.roles;\r\n      for (const role of roleList) {\r\n        if (role.authority === 'ADMIN') {\r\n          hasRoleAdmin = true;\r\n          break;\r\n        }\r\n      }\r\n      if (hasRoleAdmin) {\r\n        return true;\r\n      } else {\r\n        this.authService.logout();\r\n        this.router.navigate(['/', 'admin', 'dashboard'], { queryParams: {login: true}, queryParamsHandling: 'merge' } );\r\n        return false;\r\n      }\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/', 'admin', 'login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n    }\r\n  }\r\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.currentUser) {\r\n      const roleList = this.currentUser.roles;\r\n      let hasRoleAdmin = false;\r\n      for (const role of roleList) {\r\n        if (role.authority === 'ADMIN') {\r\n          hasRoleAdmin = true;\r\n          break;\r\n        }\r\n      }\r\n      return hasRoleAdmin;\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/', 'admin', 'login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n    }\r\n  }\r\n  canLoad(route: Route, segments: UrlSegment[]) {\r\n    return true;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}